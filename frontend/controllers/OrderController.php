<?phpnamespace frontend\controllers;use appxq\sdii\utils\SDUtility;use appxq\sdii\utils\VarDumper;use backend\modules\products\models\OrderDetails;use backend\modules\products\models\Payments;use common\modules\user\classes\CNUserFunc;use frontend\classes\CNOrder;use frontend\classes\CNProduct;use Yii;use yii\data\ActiveDataProvider;use yii\web\Controller;class OrderController extends Controller{    public function actionIndex()    {        $data = \backend\modules\products\models\Orders::find()->where('create_by=:user_id',[            ':user_id' => CNUserFunc::getUserId()        ])->orderBy(['create_date'=>SORT_DESC]);        $dataProvider = new ActiveDataProvider([            'query' => $data,            'pagination' => [                'pageSize' => 20,            ],        ]);        return $this->render('index', [            'dataProvider' => $dataProvider,        ]);    }    public function actionDetail(){        $order_id = \Yii::$app->request->get('order_id');        $order = \backend\modules\products\models\Orders::findOne($order_id);        $detail = OrderDetails::find()            ->where('order_id=:order_id',[                ':order_id' => $order_id            ])            ->all();        //VarDumper::dump($order);        return $this->render('detail', [            'detail'=>$detail,            'order'=>$order        ]);    }    public function actionGetFormPayment(){        $order_id = \Yii::$app->request->get('order_id');        $model = new Payments();        if ($model->load(Yii::$app->request->post())) {            $image = CNProduct::uploadImage($model,'image');            if($image != ''){                $model->image = $image;            }            $model->rstat = 1;            $model->create_date = date('Y-m-d H:i:s');            $model->create_by = isset(\Yii::$app->user->id) ? \Yii::$app->user->id : '';            if ($model->save()) {                return \cpn\chanpan\classes\CNMessage::getSuccess('Create successfully');            } else {                return \cpn\chanpan\classes\CNMessage::getError('Can not create the data.',$model->errors);            }        }else{            $model->order_id = $order_id;            return $this->renderAjax('get-form-payment', [                'model'=>$model,            ]);        }    }    public function actionPreviewPayment(){        $order_id = \Yii::$app->request->get('order_id');        $model = Payments::find()->where('order_id=:order_id AND rstat not in(0,3)',[            ':order_id' => $order_id        ])->all();        $storageUrl = SDUtility::getStoragePath();        return $this->renderAjax('preview-payment',[            'storageUrl'=>$storageUrl,            'model'=>$model,            'order_id'=>$order_id        ]);    }    public function actionDelPayment(){        $id = \Yii::$app->request->post('id');        $model = Payments::findOne($id);        $model->rstat =3;        if ($model->save()) {            return \cpn\chanpan\classes\CNMessage::getSuccess('Success');        } else {            return \cpn\chanpan\classes\CNMessage::getError('Can not create the data.',$model->errors);        }    }}